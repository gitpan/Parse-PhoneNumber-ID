NAME
    Parse::PhoneNumber::ID - Parse Indonesian phone numbers

VERSION
    version 0.05

SYNOPSIS
     use Parse::PhoneNumber::ID qw(parse_id_phone extract_id_phones);
     use Data::Dump;

     dd parse_id_phone(text => 'Jual dalmatian 2bl lucu2x. Hub: 7123 4567',
                       default_area_code=>'022');

    Will print something like:

     { raw          => 'Hub: 7123 4567',
       pretty       => '022-7123-4567',
       standard     => '+62.22.71234567',
       is_cell      => 1,
       is_gsm       => 0,
       is_cdma      => 1,
       operator     => 'telkom',
       product      => 'flexi',
       area_code    => '022',
       province     => 'jabar',
       cities       => 'Bandung, Cimahi, ...',
       local_number => '71234567',
       country      => 'Indonesia',
       country_code => '62',
       ext          => undef, }

    To extract more than one numbers in a text:

     my $phones = extract_id_phones(text => 'some text containing phone number(s):'.
                                            '0812 2345 6789, +62-22-91234567');
     say "There are ", scalar(@$phones), "phone number(s) found in text";
     for (@$phones) { say $_->{pretty} }

DESCRIPTION
    This module can extract/parse Indonesian phone numbers. See
    extract_id_phones() for more details.

    This module uses Log::Any logging framework, so you can use something
    like Log::Any::App to easily show more logging output during debugging.

    This module uses Sub::Spec framework, so you can switch between named
    arguments and positional, run the subroutine from the command line, etc.
    Refer to Sub::Spec documentation for more details.

FUNCTIONS
    None are exported by default, but they are exportable.

  extract_id_phones(%args) -> RESULT
    Extract phone number(s) from text.

    Extracts phone number(s) from text. Return an array of one or more
    parsed phone number structure (a hash). Understands the list of known
    area codes and cellular operators, as well as other information.
    Understands various syntax e.g. +62.22.1234567, (022) 123-4567,
    022-123-4567 ext 102, and even things like 7123456/57 (2 adjacent
    numbers).

    Extraction algorithm is particularly targetted at classified ads text in
    Indonesian language, but should be quite suitable for any other normal
    text.

    Non-Indonesian phone numbers (e.g. +65 12 3456 7890) will still be
    extracted, but without any other detailed information other than country
    code.

    Arguments ("*" denotes required arguments):

    *   text* => *str*

        Text containing phone numbers to extract from.

    *   default_area_code => *str*

        When encountering a number without area code, use this.

        If you want to extract numbers that doesn't contain area code (e.g.
        7123 4567), you'll need to provide this.

    *   level => *int* (default 5)

        How hard should the function extract numbers (1-9).

        The higher the level, the harder this function will try finding
        phone numbers, but the higher the risk of false positives will be.
        E.g. in text '123456789012345' with level=5 it will not find a phone
        number, but with level=9 it might assume, e.g. 1234567890 to be a
        phone number. Normally leaving level at default level is fine.

    *   max_numbers => *int*

  parse_id_phone(%args) -> RESULT
    Alias for extract_id_phones(..., max_numbers=>1)->[0].

    Arguments ("*" denotes required arguments):

    *   text* => *str*

        Text containing phone numbers to extract from.

    *   default_area_code => *str*

        When encountering a number without area code, use this.

        If you want to extract numbers that doesn't contain area code (e.g.
        7123 4567), you'll need to provide this.

    *   level => *int* (default 5)

        How hard should the function extract numbers (1-9).

        The higher the level, the harder this function will try finding
        phone numbers, but the higher the risk of false positives will be.
        E.g. in text '123456789012345' with level=5 it will not find a phone
        number, but with level=9 it might assume, e.g. 1234567890 to be a
        phone number. Normally leaving level at default level is fine.

SEE ALSO
    Parse::PhoneNumber

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2011 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

